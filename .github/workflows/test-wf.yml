name: Test flow 1

on:
  workflow_dispatch:
  pull_request:
    branches:
      - build-charts-scripts-tests
      - main

defaults:
  run:
    shell: bash
    working-directory: ./
env:
  ACTIONS_RUNNER_DEBUG: false
  CI_COMMIT_MESSAGE: CI Build Artifacts

jobs:
  build-extension-artifact:
    name: Build extension artifact
    runs-on: ubuntu-latest
    permissions: write-all
    outputs:
      build-status: ${{ job.status }}
    steps:
      - if: inputs.is_test == 'true'
        name: Checkout (test flow)
        uses: actions/checkout@v4
        with:
          repository: rancher/${{ inputs.test_ext_repo }}
          ref: ${{ inputs.test_ext_branch }}
          fetch-depth: 0
      
      - if: inputs.is_test != 'true'
        name: Checkout (normal flow)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Enable Corepack
        run: corepack enable

      - name: Configure Git
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Setup Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.8.0

      - name: Setup Nodejs with yarn caching
        uses: actions/setup-node@v4
        with:
          cache: yarn
          node-version-file: '.nvmrc'

      - name: Install dependencies
        run: yarn

      - name: Parse Extension Name
        id: parsed-name
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          yarn parse-tag-name elemental-3.99.99 ${{ github.run_id }} "charts"

      # - name: Run build script
      #   shell: bash
      #   id: build_script
      #   run: |
      #     publish="yarn publish-pkgs -s ${{ github.repository }} -b ${{ inputs.target_branch }}"

      #     if [[ -n "${{ inputs.tagged_release }}" ]]; then
      #       publish="$publish -t ${{ inputs.tagged_release }}"
      #     fi

      #     if [[ "${{ inputs.is_test }}" == "true" ]]; then
      #       publish="$publish -f"
      #     fi

      #     $publish
      #