{"version":3,"file":"elemental-3.0.2-rc.1.umd.min.edit.js","mappings":"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","sources":["webpack://elemental-3.0.2-rc.1/./edit/elemental.cattle.io.machineregistration.vue","webpack://elemental-3.0.2-rc.1/./edit/elemental.cattle.io.machineregistration.vue?30d6","webpack://elemental-3.0.2-rc.1/./edit/elemental.cattle.io.managedosimage.vue","webpack://elemental-3.0.2-rc.1/./edit/elemental.cattle.io.managedosimage.vue?f8e2","webpack://elemental-3.0.2-rc.1/./edit/elemental.cattle.io.managedosversionchannel.vue","webpack://elemental-3.0.2-rc.1/./edit/elemental.cattle.io.managedosversionchannel.vue?560a","webpack://elemental-3.0.2-rc.1/./edit/elemental.cattle.io.managedosimage.vue?db5f","webpack://elemental-3.0.2-rc.1/./edit/elemental.cattle.io.managedosimage.vue?0a54"],"sourcesContent":["<script>\nimport Loading from '@shell/components/Loading.vue';\nimport CruResource from '@shell/components/CruResource.vue';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport { Banner } from '@components/Banner';\nimport YamlEditor, { EDITOR_MODES } from '@shell/components/YamlEditor';\nimport FileSelector from '@shell/components/form/FileSelector';\nimport KeyValue from '@shell/components/form/KeyValue';\nimport NameNsDescription from '@shell/components/form/NameNsDescription';\n\nimport jsyaml from 'js-yaml';\nimport { saferDump } from '@shell/utils/create-yaml';\nimport { _CREATE, _EDIT } from '@shell/config/query-params';\nimport { exceptionToErrorsArray } from '@shell/utils/error';\n\nimport Tabbed from '@shell/components/Tabbed/index.vue';\nimport Tab from '@shell/components/Tabbed/Tab.vue';\n\nimport { getOperatorVersion, checkGatedFeatureCompatibility, MACH_REG_CONFIG_DEFAULTS } from '../utils/feature-versioning';\nimport { OLD_DEFAULT_CREATION_YAML, DEFAULT_CREATION_YAML } from '../models/elemental.cattle.io.machineregistration';\n\nexport default {\n  name:         'MachineRegistrationEditView',\n  components:   {\n    Loading,\n    CruResource,\n    YamlEditor,\n    KeyValue,\n    Banner,\n    FileSelector,\n    NameNsDescription,\n    Tabbed,\n    Tab\n  },\n  mixins:     [CreateEditView],\n  props:      {\n    value: {\n      type:     Object,\n      required: true\n    },\n    mode: {\n      type:     String,\n      required: true\n    }\n  },\n  async fetch() {\n    // in CREATE mode, since YAMLEditor doesn't live update, we need to force a re-render of the component for it to update\n    if (this.mode === _CREATE) {\n      const operatorVersion = await getOperatorVersion(this.$store);\n\n      this.newCloudConfigcompatibilityCheck = checkGatedFeatureCompatibility(this.value.type, this.mode, MACH_REG_CONFIG_DEFAULTS, operatorVersion);\n\n      if (!this.value.spec) {\n        this.value.spec = this.newCloudConfigcompatibilityCheck ? DEFAULT_CREATION_YAML : OLD_DEFAULT_CREATION_YAML;\n      }\n\n      this.cloudConfig = typeof this.value.spec === 'string' ? this.value.spec : saferDump(this.value.spec);\n      this.rerender = true;\n    }\n  },\n  data() {\n    return {\n      rerender:                         false,\n      cloudConfig:                      typeof this.value.spec === 'string' ? this.value.spec : saferDump(this.value.spec),\n      newCloudConfigcompatibilityCheck: false,\n      yamlErrors:                       null,\n      isFormValid:                      true\n    };\n  },\n  watch: {\n    cloudConfig: {\n      handler(neu) {\n        try {\n          const parsed = jsyaml.load(neu);\n\n          this.value.spec = parsed;\n          this.yamlErrors = null;\n        } catch (e) {\n          this.yamlErrors = exceptionToErrorsArray(e);\n        }\n      },\n      immediate: true\n    }\n  },\n  computed: {\n    isCreate() {\n      return this.mode === _CREATE;\n    },\n    isView() {\n      return this.mode !== _CREATE && this.mode !== _EDIT;\n    },\n    editorMode() {\n      if (!this.isView) {\n        return EDITOR_MODES.EDIT_CODE;\n      }\n\n      return EDITOR_MODES.VIEW_CODE;\n    },\n    hasBeenCreated() {\n      return !!this.value.id;\n    }\n  },\n  methods: {\n    async save(saveCb) {\n      this.errors = [];\n      try {\n        await this.value.save();\n        saveCb(true);\n\n        if (this.isCreate) {\n          this.$router.replace(this.value.detailLocation);\n        } else {\n          this.done();\n        }\n      } catch (err) {\n        this.errors = exceptionToErrorsArray(err);\n        saveCb(false);\n      }\n    },\n    updateLabels(ev) {\n      this.value.setLabels(ev, 'machineInventoryLabels', true);\n      let keyLengthExceeded = false;\n      let keyPrefixLengthExceeded = false;\n      let keyNameLengthExceeded = false;\n      let labelLengthExceeded = false;\n\n      this.errors = [];\n\n      if (this.value.spec.machineInventoryLabels && Object.keys(this.value.spec.machineInventoryLabels).length) {\n        Object.keys(this.value.spec.machineInventoryLabels).forEach((key) => {\n          // check length of \"key\" in key-value\n          if (key.includes('/')) {\n            const prefix = key.split('/')[0];\n            const name = key.split('/')[1];\n\n            if (prefix.length > 253) {\n              keyPrefixLengthExceeded = true;\n            }\n\n            if (name.length > 63) {\n              keyNameLengthExceeded = true;\n            }\n          } else if (key.length > 63) {\n            keyLengthExceeded = true;\n          }\n\n          // check length of \"value\" in key-value\n          if (this.value.spec.machineInventoryLabels[key].length > 63) {\n            labelLengthExceeded = true;\n          }\n        });\n      }\n\n      if (labelLengthExceeded || keyLengthExceeded || keyPrefixLengthExceeded || keyNameLengthExceeded) {\n        if (labelLengthExceeded) {\n          this.isFormValid = false;\n          this.errors.push(this.t('elemental.machineRegistration.validation.machineInventoryLabelValueLength'));\n        }\n        if (keyLengthExceeded) {\n          this.isFormValid = false;\n          this.errors.push(this.t('elemental.machineRegistration.validation.machineInventoryLabelKeyLength'));\n        }\n        if (keyPrefixLengthExceeded) {\n          this.isFormValid = false;\n          this.errors.push(this.t('elemental.machineRegistration.validation.machineInventoryLabelKeyPrefixLength'));\n        }\n        if (keyNameLengthExceeded) {\n          this.isFormValid = false;\n          this.errors.push(this.t('elemental.machineRegistration.validation.machineInventoryLabelKeyNameLength'));\n        }\n      } else {\n        this.isFormValid = true;\n      }\n    },\n    onFileSelected(value) {\n      const component = this.$refs.yamleditor;\n\n      if (component) {\n        component.updateValue(value);\n      }\n    },\n  },\n};\n</script>\n\n<template>\n  <Loading v-if=\"!value\" />\n  <CruResource\n    v-else\n    :done-route=\"doneRoute\"\n    :can-yaml=\"true\"\n    :mode=\"mode\"\n    :resource=\"value\"\n    :errors=\"errors\"\n    :validation-passed=\"isFormValid\"\n    @error=\"e=>errors = e\"\n    @finish=\"save\"\n    @cancel=\"done\"\n  >\n    <div\n      class=\"row mb-40\"\n      :class=\"{'mt-40': !hasBeenCreated }\"\n    >\n      <div class=\"col span-12\">\n        <h3>{{ t('elemental.machineRegistration.create.configuration') }}</h3>\n        <NameNsDescription\n          :value=\"value\"\n          :mode=\"mode\"\n          :description-hidden=\"true\"\n          :namespaced=\"false\"\n        />\n      </div>\n    </div>\n    <div class=\"row mb-20\">\n      <div class=\"col span-6\">\n        <h3>{{ t('elemental.machineRegistration.create.cloudConfiguration') }}</h3>\n        <YamlEditor\n          :key=\"rerender\"\n          ref=\"yamleditor\"\n          v-model:value=\"cloudConfig\"\n          class=\"mb-20\"\n          :editor-mode=\"editorMode\"\n        />\n        <div\n          v-if=\"!isView\"\n          class=\"mb-20\"\n        >\n          <FileSelector\n            class=\"btn role-secondary\"\n            data-testid=\"read-from-file-btn\"\n            :label=\"t('elemental.machineRegistration.create.readFromFile')\"\n            @selected=\"onFileSelected\"\n          />\n        </div>\n        <Banner\n          v-for=\"(err, i) in yamlErrors\"\n          :key=\"i\"\n          color=\"error\"\n          :label=\"err\"\n        />\n      </div>\n    </div>\n    <div class=\"row mb-40\">\n      <div class=\"col span-12\">\n        <h3 class=\"mt-10\">\n          {{ t('elemental.machineRegistration.create.labelsAndAnnotations') }}\n        </h3>\n        <Tabbed data-testid=\"labels-and-annotations-block\">\n          <Tab\n            label-key=\"elemental.machineRegistration.create.machineInv\"\n            name=\"machine-inventory\"\n            data-testid=\"mach-inv-tab\"\n            :weight=\"3\"\n          >\n            <Banner\n              class=\"mb-40\"\n              color=\"info\"\n              data-testid=\"mach-inv-banner\"\n            >\n              <div v-clean-html=\"t('elemental.machineRegistration.create.labelsAndAnnotationsMachInvBanner', {}, true)\" />\n            </Banner>\n            <div class=\"row mb-30\">\n              <KeyValue\n                key=\"labels\"\n                data-testid=\"add-label-mach-inv\"\n                :value=\"value.machineInventoryLabels\"\n                :add-label=\"t('labels.addLabel')\"\n                :mode=\"mode\"\n                :title=\"t('labels.labels.title')\"\n                :read-allowed=\"false\"\n                :value-can-be-empty=\"true\"\n                @update:value=\"updateLabels($event)\"\n              />\n            </div>\n            <div class=\"row mb-10\">\n              <KeyValue\n                key=\"annotations\"\n                data-testid=\"add-annotation-mach-inv\"\n                :value=\"value.machineInventoryAnnotations\"\n                :add-label=\"t('labels.addAnnotation')\"\n                :mode=\"mode\"\n                :title=\"t('labels.annotations.title')\"\n                :read-allowed=\"false\"\n                :value-can-be-empty=\"true\"\n                @update:value=\"value.setAnnotations($event, 'machineInventoryAnnotations', true)\"\n              />\n            </div>\n          </Tab>\n          <Tab\n            label-key=\"elemental.machineRegistration.create.machineReg\"\n            name=\"machine-reg\"\n            data-testid=\"mach-reg-tab\"\n            :weight=\"2\"\n          >\n            <Banner\n              class=\"mb-40\"\n              color=\"info\"\n              data-testid=\"mach-reg-banner\"\n            >\n              <div v-clean-html=\"t('elemental.machineRegistration.create.labelsAndAnnotationsMachRegBanner', {}, true)\" />\n            </Banner>\n            <div class=\"row mb-30\">\n              <KeyValue\n                key=\"labels\"\n                data-testid=\"add-label-mach-reg\"\n                :value=\"value.labels\"\n                :add-label=\"t('labels.addLabel')\"\n                :mode=\"mode\"\n                :title=\"t('labels.labels.title')\"\n                :read-allowed=\"false\"\n                :value-can-be-empty=\"true\"\n                @update:value=\"value.setLabels($event)\"\n              />\n            </div>\n            <div class=\"row mb-10\">\n              <KeyValue\n                key=\"annotations\"\n                data-testid=\"add-annotation-mach-reg\"\n                :value=\"value.annotations\"\n                :add-label=\"t('labels.addAnnotation')\"\n                :mode=\"mode\"\n                :title=\"t('labels.annotations.title')\"\n                :read-allowed=\"false\"\n                :value-can-be-empty=\"true\"\n                @update:value=\"value.setAnnotations($event)\"\n              />\n            </div>\n          </Tab>\n        </Tabbed>\n      </div>\n    </div>\n  </CruResource>\n</template>\n\n<style lang=\"scss\" scoped>\n</style>\n","import { render } from \"./elemental.cattle.io.machineregistration.vue?vue&type=template&id=0fc04f0e\"\nimport script from \"./elemental.cattle.io.machineregistration.vue?vue&type=script&lang=js\"\nexport * from \"./elemental.cattle.io.machineregistration.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<script>\nimport Loading from '@shell/components/Loading.vue';\nimport CruResource from '@shell/components/CruResource.vue';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport LabeledSelect from '@shell/components/form/LabeledSelect';\nimport NameNsDescription from '@shell/components/form/NameNsDescription';\nimport { RadioGroup } from '@components/Form/Radio';\nimport { allHash } from '@shell/utils/promise';\nimport { _CREATE, _EDIT, _VIEW } from '@shell/config/query-params';\nimport { CAPI } from '@shell/config/types';\nimport { ELEMENTAL_SCHEMA_IDS } from '../config/elemental-types';\nimport {\n  filterForElementalClusters,\n  filterForUsedElementalClustersOnManagedOs\n} from '../utils/elemental-utils';\n\nexport default {\n  name:       'ManagedOsImagesEditView',\n  components: {\n    Loading, LabeledInput, LabeledSelect, CruResource, NameNsDescription, RadioGroup\n  },\n  mixins:     [CreateEditView],\n  props:      {\n    value: {\n      type:     Object,\n      required: true\n    },\n    mode: {\n      type:     String,\n      required: true\n    },\n  },\n  async fetch() {\n    const hash = {};\n\n    hash.rancherClusters = this.$store.dispatch('management/findAll', { type: CAPI.RANCHER_CLUSTER });\n    hash.osGroups = this.$store.dispatch('management/findAll', { type: ELEMENTAL_SCHEMA_IDS.MANAGED_OS_IMAGES });\n    hash.osVersions = this.$store.dispatch('management/findAll', { type: ELEMENTAL_SCHEMA_IDS.MANAGED_OS_VERSIONS });\n    hash.osVersionChannels = this.$store.dispatch('management/findAll', { type: ELEMENTAL_SCHEMA_IDS.MANAGED_OS_VERSION_CHANNELS });\n\n    const res = await allHash(hash);\n\n    this.elementalClusters = filterForElementalClusters(res.rancherClusters || []);\n    this.osGroups = res.osGroups || [];\n    this.osVersions = res.osVersions || [];\n    this.osVersionChannels = res.osVersionChannels || [];\n\n    if ((this.mode === _EDIT || this.mode === _VIEW)) {\n      // populate OS version selected\n      if (this.value?.spec?.managedOSVersionName) {\n        this.osVersionSelected = this.value?.spec?.managedOSVersionName;\n        this.useManagedOsImages = true;\n      } else {\n        this.useManagedOsImages = false;\n      }\n\n      // populate cluster targets selected\n      if (this.value?.spec?.clusterTargets?.length) {\n        const targetsArray = [];\n\n        this.value?.spec?.clusterTargets.forEach((ct) => {\n          targetsArray.push(ct.clusterName);\n        });\n\n        this.clusterTargets = targetsArray;\n      }\n    }\n\n    // populate targetable clusters based on the usage of elemental clusters in other managedosimage's (discard those as valid options)\n    const targetableClusters = filterForUsedElementalClustersOnManagedOs(this.elementalClusters, this.osGroups, this.value.id);\n\n    this.clusterTargetOptions = targetableClusters.map((cluster) => {\n      return {\n        label: cluster.name,\n        value: cluster.name\n      };\n    });\n  },\n  data() {\n    return {\n      elementalClusters:    [],\n      osGroups:             [],\n      osVersions:           [],\n      osVersionChannels:    [],\n      clusterTargets:       [],\n      clusterTargetOptions: [],\n      useManagedOsImages:   true,\n      osVersionSelected:    ''\n    };\n  },\n  computed: {\n    managedOSVersionOptions() {\n      const out = [];\n\n      this.osVersionChannels.forEach((channel) => {\n        const versions = this.osVersions.filter((version) => {\n          // use only the same namespace as the OS groups for now...\n          const channelExists = version.metadata?.ownerReferences.find(ref => ref.name === channel.name && this.value?.metadata?.namespace === channel.metadata?.namespace);\n\n          return channelExists && Object.keys(channelExists).length && this.value?.metadata?.namespace === version.metadata?.namespace && version.spec?.type === 'container';\n        });\n\n        if (versions.length) {\n          out.push({\n            kind:  'group',\n            label: this.t('elemental.osimage.create.managedOsImage.channel', { name: channel.name }),\n            value: this.t('elemental.osimage.create.managedOsImage.channel', { name: channel.name })\n          });\n\n          versions.forEach((v) => {\n            out.push({\n              label: v.name,\n              value: v.name\n            });\n          });\n        }\n      });\n\n      return out;\n    },\n    isCreate() {\n      return this.mode === _CREATE;\n    }\n  },\n  methods: {\n    handleClusterTargetChange(ev) {\n      this.value.spec.clusterTargets = ev.map((val) => {\n        return { clusterName: val };\n      });\n      this.clusterTargets = ev;\n    },\n    handleManagedOSVersionNameChange(ev) {\n      this.value.spec.managedOSVersionName = ev;\n      this.osVersionSelected = ev;\n    },\n    handleRadioBtnChange(val) {\n      // if TRUE, this mean we are on option \"use managed OS version\"\n      // so we should clear the \"image path\" (OS image) field\n      if (val) {\n        delete this.value?.spec?.osImage;\n      } else {\n        delete this.value?.spec?.managedOSVersionName;\n        this.osVersionSelected = '';\n      }\n\n      this.useManagedOsImages = val;\n    }\n  },\n};\n</script>\n\n<template>\n  <Loading v-if=\"!value\" />\n  <CruResource\n    v-else\n    :done-route=\"doneRoute\"\n    :can-yaml=\"true\"\n    :mode=\"mode\"\n    :resource=\"value\"\n    :errors=\"errors\"\n    @error=\"e=>errors = e\"\n    @finish=\"save\"\n    @cancel=\"done\"\n  >\n    <div class=\"row mt-40 mb-20\">\n      <div class=\"col span-12 mb-20\">\n        <h3>{{ t('elemental.osimage.create.configuration') }}</h3>\n        <NameNsDescription :value=\"value\" :mode=\"mode\" :description-hidden=\"true\" :namespaced=\"false\" />\n      </div>\n    </div>\n    <div v-if=\"value.spec\" class=\"row mb-20\">\n      <div class=\"col span-6 mb-20\">\n        <h3>{{ t('elemental.osimage.create.spec') }}</h3>\n        <LabeledSelect\n          :value=\"clusterTargets\"\n          class=\"mb-10\"\n          data-testid=\"cluster-target\"\n          :label=\"t('elemental.osimage.create.targetCluster.label')\"\n          :placeholder=\"t('elemental.osimage.create.targetCluster.placeholder', null, true)\"\n          :mode=\"mode\"\n          :options=\"clusterTargetOptions\"\n          option-key=\"value\"\n          :multiple=\"true\"\n          @update:value=\"handleClusterTargetChange($event)\"\n        />\n        <p v-clean-html=\"t('elemental.osimage.create.userWarning',{}, true)\" class=\"user-warn mb-20\"></p>\n        <RadioGroup\n          :value=\"useManagedOsImages\"\n          class=\"mb-20\"\n          data-testid=\"upgrade-choice-selector\"\n          name=\"os-image-mode\"\n          :options=\"[true, false]\"\n          :labels=\"[t('elemental.osimage.create.radioOptions.osImages'), t('elemental.osimage.create.radioOptions.registry')]\"\n          :mode=\"mode\"\n          @update:value=\"handleRadioBtnChange($event)\"\n        />\n        <div v-if=\"useManagedOsImages\">\n          <LabeledSelect\n            :value=\"osVersionSelected\"\n            data-testid=\"os-version-box\"\n            :mode=\"mode\"\n            :options=\"managedOSVersionOptions\"\n            label-key=\"elemental.osimage.create.managedOsImage.label\"\n            :placeholder=\"t('elemental.osimage.create.managedOsImage.placeholder', null, true)\"\n            option-key=\"value\"\n            @update:value=\"handleManagedOSVersionNameChange($event)\"\n          />\n        </div>\n        <div v-else>\n          <LabeledInput\n            v-model:value.trim=\"value.spec.osImage\"\n            data-testid=\"os-image-box\"\n            :label=\"t('elemental.osimage.create.osImage.label')\"\n            :placeholder=\"t('elemental.osimage.create.osImage.placeholder', null, true)\"\n            :mode=\"mode\"\n          />\n        </div>\n      </div>\n    </div>\n  </CruResource>\n</template>\n\n<style lang=\"scss\" scoped>\n.user-warn {\n  font-size: 13px;\n  color: var(--darker);\n}\n</style>\n","import { render } from \"./elemental.cattle.io.managedosimage.vue?vue&type=template&id=5331f5b4&scoped=true\"\nimport script from \"./elemental.cattle.io.managedosimage.vue?vue&type=script&lang=js\"\nexport * from \"./elemental.cattle.io.managedosimage.vue?vue&type=script&lang=js\"\n\nimport \"./elemental.cattle.io.managedosimage.vue?vue&type=style&index=0&id=5331f5b4&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-5331f5b4\"]])\n\nexport default __exports__","<script>\nimport Loading from '@shell/components/Loading.vue';\nimport CruResource from '@shell/components/CruResource.vue';\nimport CreateEditView from '@shell/mixins/create-edit-view';\nimport { LabeledInput } from '@components/Form/LabeledInput';\nimport NameNsDescription from '@shell/components/form/NameNsDescription';\nimport Checkbox from '@components/Form/Checkbox/Checkbox.vue';\nimport { getOperatorVersion, checkGatedFeatureCompatibility, DELETE_NO_LONGER_IN_SYNC_CHANNELS } from '../utils/feature-versioning';\n\nexport default {\n  name:       'ManagedOsVersionChannelEditView',\n  components: {\n    Loading,\n    LabeledInput,\n    CruResource,\n    NameNsDescription,\n    Checkbox\n  },\n  mixins:     [CreateEditView],\n  props:      {\n    value: {\n      type:     Object,\n      required: true\n    },\n    mode: {\n      type:     String,\n      required: true\n    }\n  },\n  async fetch() {\n    this.operatorVersion = await getOperatorVersion(this.$store);\n  },\n  data() {\n    return { operatorVersion: '' };\n  },\n  computed: {\n    supportsNoLongerInSyncChannelDeletion() {\n      return checkGatedFeatureCompatibility(this.value.type, this.mode, DELETE_NO_LONGER_IN_SYNC_CHANNELS, this.operatorVersion);\n    }\n  },\n};\n</script>\n\n<template>\n  <Loading v-if=\"!value\" />\n  <CruResource\n    v-else\n    :done-route=\"doneRoute\"\n    :can-yaml=\"true\"\n    :mode=\"mode\"\n    :resource=\"value\"\n    :errors=\"errors\"\n    @error=\"e=>errors = e\"\n    @finish=\"save\"\n    @cancel=\"done\"\n  >\n    <div class=\"row mt-40 mb-20\">\n      <div class=\"col span-12 mb-20\">\n        <h3>{{ t('elemental.osversionchannels.create.configuration') }}</h3>\n        <NameNsDescription :value=\"value\" :mode=\"mode\" :description-hidden=\"true\" :namespaced=\"false\" />\n      </div>\n    </div>\n    <div v-if=\"value.spec\" class=\"row mb-20\">\n      <div class=\"col span-8 mb-20\">\n        <h3>{{ t('elemental.osversionchannels.create.spec') }}</h3>\n        <LabeledInput\n          v-model:value.trim=\"value.spec.options.image\"\n          data-testid=\"os-version-channel-path\"\n          :label=\"t('elemental.osversionchannels.create.registryUri.label')\"\n          :placeholder=\"t('elemental.osversionchannels.create.registryUri.placeholder', null, true)\"\n          :mode=\"mode\"\n        />\n        <Checkbox\n          v-if=\"supportsNoLongerInSyncChannelDeletion\"\n          v-model:value=\"value.spec.deleteNoLongerInSyncVersions\"\n          :mode=\"mode\"\n          :label=\"t('elemental.osversionchannels.create.automaticDelete')\"\n          data-testid=\"os-version-channel-automatic-deletion\"\n          class=\"mt-20\"\n        />\n      </div>\n    </div>\n  </CruResource>\n</template>\n","import { render } from \"./elemental.cattle.io.managedosversionchannel.vue?vue&type=template&id=11ed6255\"\nimport script from \"./elemental.cattle.io.managedosversionchannel.vue?vue&type=script&lang=js\"\nexport * from \"./elemental.cattle.io.managedosversionchannel.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","// Imports\nimport ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/noSourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".user-warn[data-v-5331f5b4]{font-size:13px;color:var(--darker)}\", \"\"]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-23.use[1]!../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[2]!../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-23.use[3]!../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-23.use[4]!../../../node_modules/cache-loader/dist/cjs.js??ruleSet[0].use[0]!../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[1]!./elemental.cattle.io.managedosimage.vue?vue&type=style&index=0&id=5331f5b4&lang=scss&scoped=true\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"4cebbf70\", content, true, {\"sourceMap\":false,\"shadowMode\":false});"],"names":["class","$props","value","_createBlock","_component_CruResource","_ctx","doneRoute","mode","resource","errors","$data","isFormValid","onError","_cache","e","onFinish","$options","save","onCancel","done","_createElementVNode","_normalizeClass","hasBeenCreated","_hoisted_1","_toDisplayString","t","_createVNode","_component_NameNsDescription","namespaced","_hoisted_2","_hoisted_3","_component_YamlEditor","key","rerender","ref","cloudConfig","$event","editorMode","isView","_createElementBlock","_hoisted_4","_component_FileSelector","label","onSelected","onFileSelected","_Fragment","_renderList","yamlErrors","err","i","_component_Banner","color","_hoisted_5","_hoisted_6","_hoisted_7","_component_Tabbed","_component_Tab","name","weight","_hoisted_8","_component_KeyValue","machineInventoryLabels","title","updateLabels","_hoisted_9","machineInventoryAnnotations","setAnnotations","_hoisted_10","labels","setLabels","_hoisted_11","annotations","_component_Loading","components","Loading","CruResource","YamlEditor","KeyValue","Banner","FileSelector","NameNsDescription","Tabbed","Tab","mixins","CreateEditView","props","type","Object","required","String","fetch","this","_CREATE","operatorVersion","getOperatorVersion","$store","newCloudConfigcompatibilityCheck","checkGatedFeatureCompatibility","MACH_REG_CONFIG_DEFAULTS","spec","DEFAULT_CREATION_YAML","OLD_DEFAULT_CREATION_YAML","saferDump","data","watch","handler","neu","parsed","jsyaml","exceptionToErrorsArray","immediate","computed","isCreate","_EDIT","EDITOR_MODES","VIEW_CODE","EDIT_CODE","id","methods","saveCb","$router","replace","detailLocation","ev","keyLengthExceeded","keyPrefixLengthExceeded","keyNameLengthExceeded","labelLengthExceeded","keys","length","forEach","includes","prefix","split","push","component","$refs","yamleditor","updateValue","__exports__","render","_component_LabeledSelect","clusterTargets","placeholder","options","clusterTargetOptions","multiple","handleClusterTargetChange","_component_RadioGroup","useManagedOsImages","handleRadioBtnChange","osVersionSelected","managedOSVersionOptions","handleManagedOSVersionNameChange","_component_LabeledInput","osImage","trim","LabeledInput","LabeledSelect","RadioGroup","hash","rancherClusters","dispatch","CAPI","RANCHER_CLUSTER","osGroups","ELEMENTAL_SCHEMA_IDS","MANAGED_OS_IMAGES","osVersions","MANAGED_OS_VERSIONS","osVersionChannels","MANAGED_OS_VERSION_CHANNELS","res","allHash","elementalClusters","filterForElementalClusters","_VIEW","managedOSVersionName","targetsArray","ct","clusterName","targetableClusters","filterForUsedElementalClustersOnManagedOs","map","cluster","out","channel","versions","filter","version","channelExists","metadata","ownerReferences","find","namespace","kind","v","val","image","supportsNoLongerInSyncChannelDeletion","_component_Checkbox","deleteNoLongerInSyncVersions","Checkbox","DELETE_NO_LONGER_IN_SYNC_CHANNELS","___CSS_LOADER_EXPORT___","module","content","__esModule","default","locals","exports","add"],"sourceRoot":""}